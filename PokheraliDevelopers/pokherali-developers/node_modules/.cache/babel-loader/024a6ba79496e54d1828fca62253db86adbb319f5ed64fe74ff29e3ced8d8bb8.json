{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Test\\\\PokheraliDevelopers\\\\pokherali-developers\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Create Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\n\n// Provide context to children\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Set up axios to include credentials (cookies) with every request\n  useEffect(() => {\n    axios.defaults.withCredentials = true;\n  }, []);\n\n  // Fetch cart items from API\n  const fetchCartItems = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(`https://localhost:7126/api/Cart`);\n      setCartItems(response.data.items || []);\n      setIsLoading(false);\n    } catch (err) {\n      setError(err.message || 'Error fetching cart items');\n      setIsLoading(false);\n    }\n  };\n  const addToCart = async ({\n    bookId,\n    quantity\n  }) => {\n    try {\n      const response = await axios.post(`https://localhost:7126/api/Cart/add`, {\n        bookId,\n        quantity\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Refresh cart items after adding\n      await fetchCartItems();\n      return response.data;\n    } catch (err) {\n      setError(err.message || 'Error adding item to cart');\n      throw err;\n    }\n  };\n\n  // Remove an item from the cart\n  const removeItem = async bookId => {\n    try {\n      await axios.delete(`https://localhost:7126/api/Cart/${bookId}`, {\n        withCredentials: true\n      });\n\n      // Refresh cart items after removing\n      await fetchCartItems();\n    } catch (err) {\n      setError(err.message || 'Error removing item from cart');\n      throw err;\n    }\n  };\n\n  // Update item quantity\n  const updateItemQuantity = async (cartItemId, quantity) => {\n    try {\n      await axios.put(`https://localhost:7126/api/Cart/update`, {\n        cartItemId,\n        quantity\n      }, {\n        withCredentials: true\n      });\n\n      // Refresh cart items after updating\n      await fetchCartItems();\n    } catch (err) {\n      setError(err.message || 'Error updating item quantity');\n      throw err;\n    }\n  };\n\n  // Clear cart\n  const clearCart = async () => {\n    try {\n      await axios.delete(`https://localhost:7126/api/Cart/clear`, {\n        withCredentials: true\n      });\n      setCartItems([]);\n    } catch (err) {\n      setError(err.message || 'Error clearing cart');\n      throw err;\n    }\n  };\n\n  // Initialize cart when component mounts\n  useEffect(() => {\n    fetchCartItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      isLoading,\n      error,\n      addToCart,\n      removeItem,\n      updateItemQuantity,\n      clearCart,\n      fetchCartItems\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use Cart Context\n_s(CartProvider, \"2o5NMf1bOUrA38liOhDwVSvo3wA=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","isLoading","setIsLoading","error","setError","defaults","withCredentials","fetchCartItems","response","get","data","items","err","message","addToCart","bookId","quantity","post","headers","removeItem","delete","updateItemQuantity","cartItemId","put","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Test/PokheraliDevelopers/pokherali-developers/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Create Context\r\nexport const CartContext = createContext();\r\n\r\n// Provide context to children\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Set up axios to include credentials (cookies) with every request\r\n  useEffect(() => {\r\n    axios.defaults.withCredentials = true;\r\n  }, []);\r\n\r\n  // Fetch cart items from API\r\n  const fetchCartItems = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.get(`https://localhost:7126/api/Cart`);\r\n      setCartItems(response.data.items || []);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setError(err.message || 'Error fetching cart items');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const addToCart = async ({bookId, quantity}) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `https://localhost:7126/api/Cart/add`,  \r\n        { bookId, quantity },  \r\n        { \r\n          headers: { 'Content-Type': 'application/json' },\r\n         \r\n        }\r\n      );\r\n      \r\n      // Refresh cart items after adding\r\n      await fetchCartItems();\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.message || 'Error adding item to cart');\r\n      throw err;\r\n    }\r\n  };\r\n  \r\n  // Remove an item from the cart\r\n  const removeItem = async (bookId) => {\r\n    try {\r\n      await axios.delete(`https://localhost:7126/api/Cart/${bookId}`, {\r\n        withCredentials: true\r\n      });\r\n      \r\n      // Refresh cart items after removing\r\n      await fetchCartItems();\r\n    } catch (err) {\r\n      setError(err.message || 'Error removing item from cart');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // Update item quantity\r\n  const updateItemQuantity = async (cartItemId, quantity) => {\r\n    try {\r\n      await axios.put(`https://localhost:7126/api/Cart/update`, {\r\n        cartItemId,\r\n        quantity\r\n      }, {\r\n        withCredentials: true\r\n      });\r\n      \r\n      // Refresh cart items after updating\r\n      await fetchCartItems();\r\n    } catch (err) {\r\n      setError(err.message || 'Error updating item quantity');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // Clear cart\r\n  const clearCart = async () => {\r\n    try {\r\n      await axios.delete(`https://localhost:7126/api/Cart/clear`, {\r\n        withCredentials: true\r\n      });\r\n      \r\n      setCartItems([]);\r\n    } catch (err) {\r\n      setError(err.message || 'Error clearing cart');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // Initialize cart when component mounts\r\n  useEffect(() => {\r\n    fetchCartItems();\r\n  }, []);\r\n\r\n  return (\r\n    <CartContext.Provider value={{ \r\n      cartItems, \r\n      isLoading, \r\n      error, \r\n      addToCart, \r\n      removeItem,\r\n      updateItemQuantity,\r\n      clearCart,\r\n      fetchCartItems\r\n    }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use Cart Context\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}