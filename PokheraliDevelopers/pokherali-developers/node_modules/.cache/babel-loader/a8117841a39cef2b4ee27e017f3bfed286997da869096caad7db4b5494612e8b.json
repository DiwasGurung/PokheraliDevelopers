{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Test\\\\PokheraliDevelopers\\\\pokherali-developers\\\\src\\\\contexts\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(null);\n\n// Create a provider component\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check for existing token on mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchUserProfile(token);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  // Function to fetch user profile using token\n  const fetchUserProfile = async token => {\n    try {\n      setLoading(true);\n\n      // You need to implement this API endpoint\n      const response = await fetch('https://localhost:7126/api/profile', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch user profile');\n      }\n      const userData = await response.json();\n      setUser(userData);\n    } catch (err) {\n      console.error('Error fetching user profile:', err);\n      setError(err.message);\n      // Clear invalid token\n      localStorage.removeItem('token');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async token => {\n    localStorage.setItem('token', token);\n    await fetchUserProfile(token);\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","loading","setLoading","error","setError","token","localStorage","getItem","fetchUserProfile","response","fetch","headers","ok","Error","userData","json","err","console","message","removeItem","login","setItem","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Test/PokheraliDevelopers/pokherali-developers/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\n// Create the context\r\nexport const UserContext = createContext(null);\r\n\r\n// Create a provider component\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Check for existing token on mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      fetchUserProfile(token);\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n  \r\n  // Function to fetch user profile using token\r\n  const fetchUserProfile = async (token) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // You need to implement this API endpoint\r\n      const response = await fetch('https://localhost:7126/api/profile', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch user profile');\r\n      }\r\n      \r\n      const userData = await response.json();\r\n      setUser(userData);\r\n    } catch (err) {\r\n      console.error('Error fetching user profile:', err);\r\n      setError(err.message);\r\n      // Clear invalid token\r\n      localStorage.removeItem('token');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Login function\r\n  const login = async (token) => {\r\n    localStorage.setItem('token', token);\r\n    await fetchUserProfile(token);\r\n  };\r\n  \r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n  \r\n  return (\r\n    <UserContext.Provider value={{ \r\n      user, \r\n      loading, \r\n      error, \r\n      login, \r\n      logout \r\n    }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;;AAE9C;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTG,gBAAgB,CAACH,KAAK,CAAC;IACzB,CAAC,MAAM;MACLH,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,gBAAgB,GAAG,MAAOH,KAAK,IAAK;IACxC,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUN,KAAK;QAClC;MACF,CAAC,CAAC;MAEF,IAAI,CAACI,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEA,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MACtCf,OAAO,CAACc,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACd,KAAK,CAAC,8BAA8B,EAAEa,GAAG,CAAC;MAClDZ,QAAQ,CAACY,GAAG,CAACE,OAAO,CAAC;MACrB;MACAZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAClC,CAAC,SAAS;MACRjB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMkB,KAAK,GAAG,MAAOf,KAAK,IAAK;IAC7BC,YAAY,CAACe,OAAO,CAAC,OAAO,EAAEhB,KAAK,CAAC;IACpC,MAAMG,gBAAgB,CAACH,KAAK,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMiB,MAAM,GAAGA,CAAA,KAAM;IACnBhB,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChCnB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAC3BzB,IAAI;MACJE,OAAO;MACPE,KAAK;MACLiB,KAAK;MACLE;IACF,CAAE;IAAAzB,QAAA,EACCA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC9B,EAAA,CAlEWF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}