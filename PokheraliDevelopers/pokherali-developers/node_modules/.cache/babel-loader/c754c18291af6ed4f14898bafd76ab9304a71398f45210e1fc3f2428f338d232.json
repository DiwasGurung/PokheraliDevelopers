{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Test\\\\PokheraliDevelopers\\\\pokherali-developers\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { UserContext } from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    isAuthenticated,\n    user\n  } = useContext(UserContext);\n\n  // Fetch cart data when component mounts or user authentication status changes\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      fetchCart();\n    } else {\n      setCartItems([]);\n    }\n  }, [isAuthenticated, user]);\n  const fetchCart = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('https://localhost:7126/api/Cart');\n      setCartItems(response.data.items || []);\n    } catch (err) {\n      console.error('Error fetching cart:', err);\n      setError('Failed to load your cart. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const addToCart = async addToCartDto => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('https://localhost:7126/api/Cart/add', addToCartDto);\n\n      // Update the cart items with the new item\n      await fetchCart();\n      return response.data;\n    } catch (err) {\n      console.error('Error adding to cart:', err);\n      setError('Failed to add item to cart. Please try again.');\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const updateItemQuantity = async (bookId, quantity) => {\n    // Find the cart item ID for this book\n    const cartItem = cartItems.find(item => item.bookId === bookId);\n    if (!cartItem) {\n      console.error('Cart item not found');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      if (quantity <= 0) {\n        // Remove the item if quantity is 0 or negative\n        await axios.delete(`https://localhost:7126/api/Cart/${cartItem.id}`);\n      } else {\n        // Update quantity\n        await axios.put('https://localhost:7126/api/Cart/update', {\n          cartItemId: cartItem.id,\n          quantity\n        });\n      }\n\n      // Refresh cart\n      await fetchCart();\n    } catch (err) {\n      console.error('Error updating cart item:', err);\n      setError('Failed to update item quantity. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const removeItem = async bookId => {\n    // Find the cart item ID for this book\n    const cartItem = cartItems.find(item => item.bookId === bookId);\n    if (!cartItem) {\n      console.error('Cart item not found');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      await axios.delete(`https://localhost:7126/api/Cart/${cartItem.id}`);\n\n      // Refresh cart\n      await fetchCart();\n    } catch (err) {\n      console.error('Error removing cart item:', err);\n      setError('Failed to remove item from cart. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const clearCart = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      await axios.delete('https://localhost:7126/api/Cart/clear');\n      setCartItems([]);\n    } catch (err) {\n      console.error('Error clearing cart:', err);\n      setError('Failed to clear cart. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Calculate cart totals\n  const getTotals = () => {\n    const itemCount = cartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = cartItems.reduce((sum, item) => sum + item.bookPrice * item.quantity, 0);\n    return {\n      itemCount,\n      subtotal\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      isLoading,\n      error,\n      addToCart,\n      updateItemQuantity,\n      removeItem,\n      clearCart,\n      fetchCart,\n      getTotals\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"2In2PBgSXXFjWUT7Ewabxf2ZRoc=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","UserContext","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","isLoading","setIsLoading","error","setError","isAuthenticated","user","fetchCart","response","get","data","items","err","console","addToCart","addToCartDto","post","updateItemQuantity","bookId","quantity","cartItem","find","item","delete","id","put","cartItemId","removeItem","clearCart","getTotals","itemCount","reduce","total","subtotal","sum","bookPrice","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Test/PokheraliDevelopers/pokherali-developers/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { UserContext } from './UserContext';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  const { isAuthenticated, user } = useContext(UserContext);\r\n  \r\n  // Fetch cart data when component mounts or user authentication status changes\r\n  useEffect(() => {\r\n    if (isAuthenticated && user) {\r\n      fetchCart();\r\n    } else {\r\n      setCartItems([]);\r\n    }\r\n  }, [isAuthenticated, user]);\r\n  \r\n  const fetchCart = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await axios.get('https://localhost:7126/api/Cart');\r\n      setCartItems(response.data.items || []);\r\n    } catch (err) {\r\n      console.error('Error fetching cart:', err);\r\n      setError('Failed to load your cart. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  const addToCart = async (addToCartDto) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await axios.post('https://localhost:7126/api/Cart/add', addToCartDto);\r\n      \r\n      // Update the cart items with the new item\r\n      await fetchCart();\r\n      \r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Error adding to cart:', err);\r\n      setError('Failed to add item to cart. Please try again.');\r\n      throw err;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  const updateItemQuantity = async (bookId, quantity) => {\r\n    // Find the cart item ID for this book\r\n    const cartItem = cartItems.find(item => item.bookId === bookId);\r\n    \r\n    if (!cartItem) {\r\n      console.error('Cart item not found');\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      if (quantity <= 0) {\r\n        // Remove the item if quantity is 0 or negative\r\n        await axios.delete(`https://localhost:7126/api/Cart/${cartItem.id}`);\r\n      } else {\r\n        // Update quantity\r\n        await axios.put('https://localhost:7126/api/Cart/update', {\r\n          cartItemId: cartItem.id,\r\n          quantity\r\n        });\r\n      }\r\n      \r\n      // Refresh cart\r\n      await fetchCart();\r\n    } catch (err) {\r\n      console.error('Error updating cart item:', err);\r\n      setError('Failed to update item quantity. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  const removeItem = async (bookId) => {\r\n    // Find the cart item ID for this book\r\n    const cartItem = cartItems.find(item => item.bookId === bookId);\r\n    \r\n    if (!cartItem) {\r\n      console.error('Cart item not found');\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      await axios.delete(`https://localhost:7126/api/Cart/${cartItem.id}`);\r\n      \r\n      // Refresh cart\r\n      await fetchCart();\r\n    } catch (err) {\r\n      console.error('Error removing cart item:', err);\r\n      setError('Failed to remove item from cart. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  const clearCart = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      await axios.delete('https://localhost:7126/api/Cart/clear');\r\n      setCartItems([]);\r\n    } catch (err) {\r\n      console.error('Error clearing cart:', err);\r\n      setError('Failed to clear cart. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Calculate cart totals\r\n  const getTotals = () => {\r\n    const itemCount = cartItems.reduce((total, item) => total + item.quantity, 0);\r\n    const subtotal = cartItems.reduce((sum, item) => sum + (item.bookPrice * item.quantity), 0);\r\n    \r\n    return {\r\n      itemCount,\r\n      subtotal\r\n    };\r\n  };\r\n  \r\n  return (\r\n    <CartContext.Provider \r\n      value={{ \r\n        cartItems, \r\n        isLoading, \r\n        error, \r\n        addToCart, \r\n        updateItemQuantity, \r\n        removeItem, \r\n        clearCart,\r\n        fetchCart,\r\n        getTotals\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}