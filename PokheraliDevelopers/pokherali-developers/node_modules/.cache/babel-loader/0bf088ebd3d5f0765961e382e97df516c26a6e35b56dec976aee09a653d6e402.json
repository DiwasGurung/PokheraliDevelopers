{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Test\\\\PokheraliDevelopers\\\\pokherali-developers\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Create Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\n\n// Provide context to children\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch cart items from API\n  const fetchCartItems = async () => {\n    setIsLoading(true);\n    try {\n      const storedUser = localStorage.getItem('user'); // Check if user object exists in localStorage\n      if (!storedUser) {\n        throw new Error('User is not logged in');\n      }\n      const user = JSON.parse(storedUser);\n      const userId = user.id; // Assuming the user object contains an 'id'\n\n      const response = await axios.get(`https://localhost:7126/api/Cart/${userId}`);\n      setCartItems(response.data);\n      setIsLoading(false);\n    } catch (err) {\n      setError(err.message || 'Error fetching cart items');\n      setIsLoading(false);\n    }\n  };\n\n  // Add an item to the cart\n  const addToCart = async bookId => {\n    try {\n      const storedUser = localStorage.getItem('user');\n      if (!storedUser) {\n        throw new Error('User is not logged in');\n      }\n      const user = JSON.parse(storedUser);\n      const userId = user.id;\n      const response = await axios.post(`https://localhost:7126/api/Cart/add`, {\n        bookId,\n        quantity: 1\n      } // Assuming quantity is 1 for simplicity,\n      );\n      setCartItems(prevItems => [...prevItems, response.data]);\n    } catch (err) {\n      setError(err.message || 'Error adding item to cart');\n    }\n  };\n\n  // Remove an item from the cart\n  const removeItem = async bookId => {\n    try {\n      const storedUser = localStorage.getItem('user');\n      if (!storedUser) {\n        throw new Error('User is not logged in');\n      }\n      const user = JSON.parse(storedUser);\n      const userId = user.id;\n      const response = await axios.delete(`https://localhost:7126/api/Cart/${bookId}`, {\n        data: {\n          userId\n        }\n      });\n      setCartItems(prevItems => prevItems.filter(item => item.id !== bookId));\n    } catch (err) {\n      setError(err.message || 'Error removing item from cart');\n    }\n  };\n  useEffect(() => {\n    fetchCartItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      isLoading,\n      error,\n      addToCart,\n      removeItem\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use Cart Context\n_s(CartProvider, \"IdlZJRAG+08Nk9hWXVgV1OzzOk8=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","isLoading","setIsLoading","error","setError","fetchCartItems","storedUser","localStorage","getItem","Error","user","JSON","parse","userId","id","response","get","data","err","message","addToCart","bookId","post","quantity","prevItems","removeItem","delete","filter","item","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Test/PokheraliDevelopers/pokherali-developers/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Create Context\r\nexport const CartContext = createContext();\r\n\r\n// Provide context to children\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch cart items from API\r\n  const fetchCartItems = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const storedUser = localStorage.getItem('user'); // Check if user object exists in localStorage\r\n      if (!storedUser) {\r\n        throw new Error('User is not logged in');\r\n      }\r\n\r\n      const user = JSON.parse(storedUser);\r\n      const userId = user.id; // Assuming the user object contains an 'id'\r\n\r\n      const response = await axios.get(`https://localhost:7126/api/Cart/${userId}`);\r\n      setCartItems(response.data);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setError(err.message || 'Error fetching cart items');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Add an item to the cart\r\n  const addToCart = async (bookId) => {\r\n    try {\r\n      const storedUser = localStorage.getItem('user');\r\n      if (!storedUser) {\r\n        throw new Error('User is not logged in');\r\n      }\r\n\r\n      const user = JSON.parse(storedUser);\r\n      const userId = user.id;\r\n\r\n      const response = await axios.post(\r\n        `https://localhost:7126/api/Cart/add`,\r\n        { bookId, quantity: 1 } // Assuming quantity is 1 for simplicity,\r\n      );\r\n\r\n      setCartItems((prevItems) => [...prevItems, response.data]);\r\n    } catch (err) {\r\n      setError(err.message || 'Error adding item to cart');\r\n    }\r\n  };\r\n\r\n  // Remove an item from the cart\r\n  const removeItem = async (bookId) => {\r\n    try {\r\n      const storedUser = localStorage.getItem('user');\r\n      if (!storedUser) {\r\n        throw new Error('User is not logged in');\r\n      }\r\n\r\n      const user = JSON.parse(storedUser);\r\n      const userId = user.id;\r\n\r\n      const response = await axios.delete(\r\n        `https://localhost:7126/api/Cart/${bookId}`,\r\n        { data: { userId } }\r\n      );\r\n\r\n      setCartItems((prevItems) => prevItems.filter((item) => item.id !== bookId));\r\n    } catch (err) {\r\n      setError(err.message || 'Error removing item from cart');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCartItems();\r\n  }, []);\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, isLoading, error, addToCart, removeItem }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use Cart Context\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}