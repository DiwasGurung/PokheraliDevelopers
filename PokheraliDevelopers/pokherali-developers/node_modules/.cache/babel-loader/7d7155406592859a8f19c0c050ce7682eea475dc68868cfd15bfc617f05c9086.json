{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Test\\\\PokheraliDevelopers\\\\pokherali-developers\\\\src\\\\components\\\\BookCatalog.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport BookItem from \"./BookItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = \"https://your-api-url.com/api/Books\"; // Replace with your actual API URL\n\nexport default function BookCatalog({\n  filters = {}\n}) {\n  _s();\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  const [allBooks, setAllBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch books from API\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(apiUrl);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch books\");\n        }\n        const data = await response.json();\n        setAllBooks(data); // Set all books from the API\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBooks();\n  }, []); // Only run on component mount\n\n  // Apply filters whenever filter criteria change\n  useEffect(() => {\n    let result = allBooks;\n\n    // Apply genre filter\n    if (filters.genre) {\n      result = result.filter(book => book.genre === filters.genre);\n    }\n\n    // Apply author filter\n    if (filters.author) {\n      result = result.filter(book => book.author.toLowerCase().includes(filters.author.toLowerCase()));\n    }\n\n    // Apply price range filter\n    if (filters.priceRange) {\n      const [min, max] = filters.priceRange;\n      result = result.filter(book => book.price >= min && book.price <= max);\n    }\n\n    // Apply rating filter\n    if (filters.rating) {\n      result = result.filter(book => book.rating >= filters.rating);\n    }\n\n    // Apply availability filters\n    if (filters.availability) {\n      if (filters.availability.inStock) {\n        result = result.filter(book => book.availability === \"In stock\");\n      }\n      if (filters.availability.preOrder) {\n        result = result.filter(book => book.availability === \"Pre-order\");\n      }\n    }\n\n    // Apply special category filters\n    if (filters.specialCategories) {\n      if (filters.specialCategories.bestseller) {\n        result = result.filter(book => book.bestseller);\n      }\n      if (filters.specialCategories.newRelease) {\n        result = result.filter(book => book.newRelease);\n      }\n      if (filters.specialCategories.onSale) {\n        result = result.filter(book => book.onSale);\n      }\n    }\n    setFilteredBooks(result); // Set the filtered books\n  }, [filters, allBooks]); // Only re-run the effect when filters or allBooks change\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading books...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: filteredBooks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-12 bg-white rounded-xl shadow-sm border border-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No books match your filters. Try adjusting your criteria.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : filteredBooks.map(book => /*#__PURE__*/_jsxDEV(BookItem, {\n      book: book\n    }, book.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(BookCatalog, \"TKSnZOCJR6qB9xKcezuuUXPvU7k=\");\n_c = BookCatalog;\nvar _c;\n$RefreshReg$(_c, \"BookCatalog\");","map":{"version":3,"names":["useState","useEffect","BookItem","jsxDEV","_jsxDEV","apiUrl","BookCatalog","filters","_s","filteredBooks","setFilteredBooks","allBooks","setAllBooks","loading","setLoading","error","setError","fetchBooks","response","fetch","ok","Error","data","json","err","message","result","genre","filter","book","author","toLowerCase","includes","priceRange","min","max","price","rating","availability","inStock","preOrder","specialCategories","bestseller","newRelease","onSale","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","id","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Test/PokheraliDevelopers/pokherali-developers/src/components/BookCatalog.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport BookItem from \"./BookItem\";\r\n\r\nconst apiUrl = \"https://your-api-url.com/api/Books\"; // Replace with your actual API URL\r\n\r\nexport default function BookCatalog({ filters = {} }) {\r\n  const [filteredBooks, setFilteredBooks] = useState([]);\r\n  const [allBooks, setAllBooks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch books from API\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(apiUrl);\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch books\");\r\n        }\r\n        const data = await response.json();\r\n        setAllBooks(data);  // Set all books from the API\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBooks();\r\n  }, []); // Only run on component mount\r\n\r\n  // Apply filters whenever filter criteria change\r\n  useEffect(() => {\r\n    let result = allBooks;\r\n\r\n    // Apply genre filter\r\n    if (filters.genre) {\r\n      result = result.filter((book) => book.genre === filters.genre);\r\n    }\r\n\r\n    // Apply author filter\r\n    if (filters.author) {\r\n      result = result.filter((book) => book.author.toLowerCase().includes(filters.author.toLowerCase()));\r\n    }\r\n\r\n    // Apply price range filter\r\n    if (filters.priceRange) {\r\n      const [min, max] = filters.priceRange;\r\n      result = result.filter((book) => book.price >= min && book.price <= max);\r\n    }\r\n\r\n    // Apply rating filter\r\n    if (filters.rating) {\r\n      result = result.filter((book) => book.rating >= filters.rating);\r\n    }\r\n\r\n    // Apply availability filters\r\n    if (filters.availability) {\r\n      if (filters.availability.inStock) {\r\n        result = result.filter((book) => book.availability === \"In stock\");\r\n      }\r\n      if (filters.availability.preOrder) {\r\n        result = result.filter((book) => book.availability === \"Pre-order\");\r\n      }\r\n    }\r\n\r\n    // Apply special category filters\r\n    if (filters.specialCategories) {\r\n      if (filters.specialCategories.bestseller) {\r\n        result = result.filter((book) => book.bestseller);\r\n      }\r\n      if (filters.specialCategories.newRelease) {\r\n        result = result.filter((book) => book.newRelease);\r\n      }\r\n      if (filters.specialCategories.onSale) {\r\n        result = result.filter((book) => book.onSale);\r\n      }\r\n    }\r\n\r\n    setFilteredBooks(result); // Set the filtered books\r\n  }, [filters, allBooks]); // Only re-run the effect when filters or allBooks change\r\n\r\n  if (loading) {\r\n    return <div>Loading books...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {filteredBooks.length === 0 ? (\r\n        <div className=\"text-center py-12 bg-white rounded-xl shadow-sm border border-gray-100\">\r\n          <p className=\"text-gray-500\">No books match your filters. Try adjusting your criteria.</p>\r\n        </div>\r\n      ) : (\r\n        filteredBooks.map((book) => <BookItem key={book.id} book={book} />)\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}